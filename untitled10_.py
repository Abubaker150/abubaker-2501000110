# -*- coding: utf-8 -*-
"""Untitled10.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rmln5pq8gxD39aFXTXL6HduLqfwBlJsN
"""

!pip install schedule
import requests
import time
import logging
import schedule  # Import the schedule module
import smtplib
from email.mime.text import MIMEText

# Configure logging
logging.basicConfig(filename="website_monitor.log", level=logging.INFO, format="%(asctime)s - %(message)s")

# List of URLs to monitor
URLS = ["https://uok.ac.rw", "https://example.com", "https://google.com"]

# Email configuration
EMAIL_ADDRESS = "your_email@gmail.com"
EMAIL_PASSWORD = "your_email_pasowrd"
ALERT_EMAIL = "abubaker150107@gmail.com"

def send_alert(message):
    """Send an alert email"""
    msg = MIMEText(message)
    msg['Subject'] = 'Website Monitoring Alert'
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = ALERT_EMAIL

    with smtplib.SMTP('smtp.gmail.com', 587) as server:
        server.starttls()
        server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
        server.sendmail(EMAIL_ADDRESS, ALERT_EMAIL, msg.as_string())
    print(f"ALERT: {message}")

def check_website(url):
    """Check website status and log results"""
    try:
        response = requests.get(url, timeout=5)
        response_time = response.elapsed.total_seconds()

        if response.status_code == 200:
            print(f"✅ {url} is UP (Response Time: {response_time:.2f}s)")
            logging.info(f"{url} is UP (Response Time: {response_time:.2f}s)")
        else:
            print(f"⚠️ {url} returned status {response.status_code}")
            logging.warning(f"{url} returned status {response.status_code}")
            send_alert(f"{url} returned status {response.status_code}")

    except requests.exceptions.RequestException as e:
        print(f"❌ {url} is DOWN! Error: {e}")
        logging.error(f"{url} is DOWN! Error: {e}")
        send_alert(f"{url} is DOWN! Error: {e}")

def monitor_websites():
    """Check all websites in the list"""
    for url in URLS:
        check_website(url)

# Schedule checks every 5 minutes
schedule.every(5).minutes.do(monitor_websites)

# Run indefinitely
if __name__ == "__main__":  # Corrected variable name from _name_ to __name__
    print("Website monitoring started...")
    while True:
        schedule.run_pending()
        time.sleep(1)